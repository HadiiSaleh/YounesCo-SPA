{"version":3,"sources":["webpack:///./src/app/AdminPanel/Invoices/Invoices/Invoices.component.html","webpack:///./src/app/AdminPanel/Invoices/Invoices.module.ts","webpack:///./src/app/AdminPanel/Invoices/Invoices.routing.ts","webpack:///./src/app/AdminPanel/Invoices/Invoices/Invoices.component.scss","webpack:///./src/app/AdminPanel/Invoices/Invoices/Invoices.component.ts"],"names":[],"mappings":"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","file":"Invoices-Invoices-module.js","sourcesContent":["module.exports = \"<div class=\\\"dash-title mb-4 ml-3\\\">\\r\\n   Invoice List\\r\\n</div>\\r\\n<!-- dash-title -->\\r\\n<mat-card class=\\\"m-3\\\">\\r\\n   <div fxLayout=\\\"row wrap\\\">\\r\\n      <div fxFlex.gt-md=\\\"600px\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" fxFlex=\\\"100\\\">\\r\\n         <mat-form-field class=\\\"w-100\\\">\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\r\\n         </mat-form-field>\\r\\n      </div>\\r\\n   </div>\\r\\n   <!-- wrap -->\\r\\n</mat-card>\\r\\n<ng-container *ngIf=\\\"invoiceList && invoiceList.length>0; else elseBlock\\\">\\r\\n   <div fxLayout=\\\"column\\\">\\r\\n      <mat-card>\\r\\n         <div class=\\\"table-responsive-x\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100 table-scroll-wrap\\\">\\r\\n               <ng-container matColumnDef=\\\"position\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> No. </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"invoiceId\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> Invoice Id </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> <a href=\\\"javascript:void(0)\\\" (click) =\\\"onSeeDialog()\\\"> {{element.invoiceId}}</a> </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"name\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> Buyer </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"date\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef>Date </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"price\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> Price </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> ${{element.price}} </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"payment\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Payment </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.payment}} </td>\\r\\n               </ng-container>\\r\\n               <ng-container matColumnDef=\\\"status\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> Status </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n               </ng-container> \\r\\n               <ng-container matColumnDef=\\\"action\\\">\\r\\n                  <th class=\\\"px-3 text-nowrap\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                  <td class=\\\"px-3 text-nowrap\\\" mat-cell *matCellDef=\\\"let element;let i = index;\\\">\\r\\n                  <button mat-icon-button (click) =\\\"onSeeDialog()\\\" color=\\\"primary\\\">\\r\\n                     <i class=\\\"material-icons\\\">remove_red_eye</i>\\r\\n                  </button> \\r\\n                  <button color=\\\"warn\\\" mat-icon-button (click)=\\\"onDelete(i)\\\">\\r\\n                     <mat-icon class=\\\"\\\">delete</mat-icon>\\r\\n                  </button>\\r\\n                  </td>\\r\\n               </ng-container>\\r\\n               <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n               <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n         </div>  \\r\\n         <mat-paginator [pageSizeOptions]=\\\"[15, 30, 45, 60]\\\"></mat-paginator>\\r\\n         <!-- table-responsive -->\\r\\n      </mat-card>\\r\\n   </div>\\r\\n</ng-container>\\r\\n<ng-template #elseBlock>\\r\\n   <h5 class=\\\"ml-5\\\">No data found</h5>\\r\\n</ng-template>\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatTableModule,\r\n         MatCardModule,\r\n         MatFormFieldModule,\r\n         MatInputModule,\r\n\t\t\tMatIconModule,\r\n         MatButtonModule,\r\n         MatPaginatorModule} from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { InvoicesComponent } from './Invoices/Invoices.component';\r\nimport { InvoicesRoutes} from './Invoices.routing';\r\n\r\n@NgModule({\r\n\tdeclarations: [InvoicesComponent],\r\n\timports: [\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatCardModule,\r\n\t\tMatTableModule,\r\n      CommonModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      FlexLayoutModule,\r\n      MatPaginatorModule,\r\n\t\tRouterModule.forChild(InvoicesRoutes)\r\n\t]\r\n})\r\nexport class InvoicesModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { InvoicesComponent } from './Invoices/Invoices.component';\r\n\r\nexport const InvoicesRoutes: Routes = [\r\n\t{\r\n\t\tpath      : '',\r\n\t\tcomponent : InvoicesComponent\r\n\t}\r\n];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluUGFuZWwvSW52b2ljZXMvSW52b2ljZXMvSW52b2ljZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AdminPanelServiceService } from '../../Service/AdminPanelService.service';\r\nimport { MatTableDataSource, MatPaginator} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-invoices',\r\n  templateUrl: './Invoices.component.html',\r\n  styleUrls: ['./Invoices.component.scss']\r\n})\r\n\r\nexport class InvoicesComponent implements OnInit {\r\n\r\n\tpopUpDeleteUserResponse : any;\r\n\tinvoiceList             : any [] = [];\r\n\r\n   @ViewChild(MatPaginator,{static: false}) paginator : MatPaginator;\r\n\r\n   dataSource = new MatTableDataSource<any>(this.invoiceList);\r\n\r\n   displayedColumns : string[] = ['position', 'invoiceId', 'name', 'date','price', 'payment','status','action'];\r\n\r\n\tconstructor(public service : AdminPanelServiceService) { }\r\n\r\n\tngOnInit() {\r\n      this.service.getInvoiceContent().valueChanges().subscribe(res => this.getInvoiceData(res));\r\n\t}\r\n\r\n   //getInvoiceData method is used to get the invoice list data.\r\n   getInvoiceData(response){\r\n      this.invoiceList = response;\r\n      this.dataSource = new MatTableDataSource<any>(this.invoiceList);\r\n      setTimeout(()=>{\r\n         this.dataSource.paginator = this.paginator;\r\n      },0)\r\n    \r\n   }\r\n\t/** \r\n     *onDelete method is used to open a delete dialog.\r\n     */\r\n   onDelete(i){\r\n      this.service.deleteDialog(\"Are you sure you want to delete this invoice permanently?\").\r\n         subscribe( res => {this.popUpDeleteUserResponse = res},\r\n                    err => console.log(err),\r\n                    ()  => this.getDeleteResponse(this.popUpDeleteUserResponse,i))\r\n   }\r\n\r\n   /**\r\n     * getDeleteResponse method is used to delete a invoice from the invoice list.\r\n     */\r\n   getDeleteResponse(response : string, i){\r\n      if(response == \"yes\"){\r\n         this.dataSource.data.splice(i,1);\r\n         this.dataSource = new MatTableDataSource(this.dataSource.data);\r\n         this.dataSource.paginator = this.paginator;\r\n      }\r\n   }\r\n\r\n   /**\r\n     * onSeeDialog method is used to open a see dialog.\r\n     */\r\n   onSeeDialog(){\r\n      this.service.seeList();\r\n   }\r\n\r\n   //applyFilter function can be set which takes a data object and filter string and returns true if the data object is considered a match.\r\n   applyFilter(filterValue: string) {\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.dataSource.paginator) {\r\n         this.dataSource.paginator.firstPage();\r\n      }\r\n   }\r\n}\r\n"],"sourceRoot":""}