{"version":3,"sources":["webpack:///./src/app/AdminPanel/AdminAccount/Account/Account.component.html","webpack:///./src/app/AdminPanel/AdminAccount/Collaboration/Collaboration.component.html","webpack:///./src/app/AdminPanel/AdminAccount/EditProfile/EditProfile.component.html","webpack:///./src/app/AdminPanel/AdminAccount/Profile/Profile.component.html","webpack:///./src/app/AdminPanel/AdminAccount/Account/Account.component.scss","webpack:///./src/app/AdminPanel/AdminAccount/Account/Account.component.ts","webpack:///./src/app/AdminPanel/AdminAccount/AdminAccount.module.ts","webpack:///./src/app/AdminPanel/AdminAccount/AdminAccount.routing.ts","webpack:///./src/app/AdminPanel/AdminAccount/Collaboration/Collaboration.component.scss","webpack:///./src/app/AdminPanel/AdminAccount/Collaboration/Collaboration.component.ts","webpack:///./src/app/AdminPanel/AdminAccount/EditProfile/EditProfile.component.scss","webpack:///./src/app/AdminPanel/AdminAccount/EditProfile/EditProfile.component.ts","webpack:///./src/app/AdminPanel/AdminAccount/Profile/Profile.component.scss","webpack:///./src/app/AdminPanel/AdminAccount/Profile/Profile.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+vBAA+vB,iBAAiB,+yD;;;;;;;;;;;ACAhxB,8NAA8N,0YAA0Y,eAAe,qRAAqR,cAAc,4PAA4P,eAAe,8PAA8P,gBAAgB,yPAAyP,cAAc,4WAA4W,2BAA2B,6N;;;;;;;;;;;ACAjkE,0nBAA0nB,isH;;;;;;;;;;;ACA1nB,unCAAunC,YAAY,iD;;;;;;;;;;;ACAnoC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAEiC;AAQnF;IAEE,0BAAoB,YAAsC;QAAtC,iBAAY,GAAZ,YAAY,CAA0B;IAAI,CAAC;IAY/D,mCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;QAEnD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC,gBAAM,IAAM,KAAI,CAAC,eAAe,GAAG,MAAM,EAAC,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAChF,CAAC;;gBApBiC,2FAAwB;;IAF/C,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+KAAuC;;SAExC,CAAC;yCAGkC,2FAAwB;OAF/C,gBAAgB,CA4B5B;IAAD,uBAAC;CAAA;AA5B4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AACM;AACmB;AACnB;AAapB;AAC6B;AAEO;AACkB;AACN;AACZ;AACH;AA4B5D;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QA1B9B,8DAAQ,CAAC;YACT,YAAY,EAAE;gBACb,2EAAgB;gBAChB,2EAAgB;gBAChB,6FAAsB;gBACtB,uFAAoB;aACpB;YACD,OAAO,EAAE;gBACR,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,yEAAkB,CAAC;gBACzC,+DAAa;gBACb,iEAAe;gBACf,+DAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,qEAAmB;gBACnB,oEAAkB;gBAClB,gEAAc;gBACd,iEAAe;gBACf,0DAAW;gBACX,kEAAmB;gBACnB,gEAAc;gBACd,qEAAgB;gBAChB,mEAAiB;aACjB;SACD,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACA;AACkB;AACN;AAEpE,IAAM,kBAAkB,GAAW;IACvC;QACG,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2EAAgB;QAC3B,QAAQ,EAAE;YACP;gBACG,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,2EAAgB;aAC7B;YACD;gBACG,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,6FAAsB;aACnC;YACD;gBACG,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,uFAAoB;aACjC;SACH;KACH;CACH,CAAC;;;;;;;;;;;;ACzBF,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACiC;AAC5B;AAQvD;IAUC,gCAAmB,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;QAJrD,qBAAgB,GAAc,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE7E,eAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAER,CAAC;IAE1D,yCAAQ,GAAR;QAAA,iBAEC;QADA,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC;IACxG,CAAC;IAEC,oEAAoE;IACpE,qDAAoB,GAApB,UAAqB,QAAQ;QAC1B,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzE,CAAC;IACH;;OAEM;IACJ,yCAAQ,GAAR,UAAS,CAAC;QAAV,iBAKC;QAJE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,wDAAwD,CAAC;YAChF,SAAS,CAAE,aAAG,IAAK,KAAI,CAAC,uBAAuB,GAAG,GAAG,GAAC,EAC3C,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EACvB,cAAO,YAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,uBAAuB,EAAC,CAAC,CAAC,EAAtD,CAAsD,CAAC;IAC/E,CAAC;IAED;;QAEI;IACJ,kDAAiB,GAAjB,UAAkB,QAAiB,EAAC,CAAC;QAClC,IAAG,QAAQ,IAAI,KAAK,EAAC;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACjE;IACJ,CAAC;IAED;;QAEI;IACJ,iDAAgB,GAAhB;QAAA,iBAKC;QAJE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC5B,SAAS,CAAE,aAAG,IAAK,KAAI,CAAC,oBAAoB,GAAG,GAAG,GAAC,EACxC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EACvB,cAAO,YAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,oBAAoB,CAAC,EAAvD,CAAuD,CAAC;IAChF,CAAC;IAED;;;QAGI;IACJ,wDAAuB,GAAvB,UAAwB,QAAa;QAClC,IAAG,QAAQ,EAAC;YACT,IAAI,OAAO,GAAG;gBACX,KAAK,EAAG,6BAA6B;gBACrC,IAAI,EAAG,QAAQ,CAAC,IAAI;gBACpB,KAAK,EAAG,QAAQ,CAAC,KAAK;gBACzB,MAAM,EAAG,QAAQ,CAAC,UAAU;aAC3B;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACxE;IACJ,CAAC;;gBAxD0B,2FAAwB;;IAVzC,sBAAsB;QANlC,+DAAS,CAAC;YACV,QAAQ,EAAE,mBAAmB;YAC7B,iMAA6C;;SAE7C,CAAC;yCAY4B,2FAAwB;OAVzC,sBAAsB,CAoElC;IAAD,6BAAC;CAAA;AApEkC;;;;;;;;;;;;ACVnC,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACiB;AACwB;AACV;AAOjF;IAeG,8BAAoB,KAAqB,EACrB,MAAc,EACd,SAAuB,EACvB,aAA4B;QAHhD,iBAUC;QAVmB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAc;QACvB,kBAAa,GAAb,aAAa,CAAe;QAZhD,iBAAY,GAAS,cAAc,CAAC;QACpC,gBAAW,GAAmB;YAC3B,KAAK,EAAO,qBAAqB;YACjC,GAAG,EAAS,gDAAgD;YAC5D,SAAS,EAAG,IAAI;YAChB,OAAO,EAAK,IAAI;YAChB,KAAK,EAAO,UAAU;SACxB,CAAC;QAOC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC/B,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,qBAAW;gBACvC,KAAI,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACN,CAAC;IAED,uCAAQ,GAAR;QACG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAK,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,SAAS,EAAM,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,EAAS,CAAC,MAAM,CAAC;YACvB,IAAI,EAAW,EAAE;YACjB,YAAY,EAAG,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,QAAQ,EAAO,CAAC,EAAE,CAAC;YACnB,KAAK,EAAU,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;IACN,CAAC;IAED;;;OAGG;IACH,gDAAiB,GAAjB;QAAA,iBAUC;QATE,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC1D,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACL;aAAM;YACJ,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;aACxC;SACH;IACJ,CAAC;;gBAtC0B,8DAAc;gBACb,sDAAM;gBACF,0DAAW;gBACR,wDAAa;;IAlBtC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,2LAA2C;;SAE5C,CAAC;yCAgB4B,8DAAc;YACb,sDAAM;YACF,0DAAW;YACR,wDAAa;OAlBtC,oBAAoB,CAuDhC;IAAD,2BAAC;CAAA;AAvDgC;;;;;;;;;;;;ACVjC,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+KAAuC;;SAExC,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B","file":"AdminAccount-AdminAccount-module.js","sourcesContent":["module.exports = \"<div class=\\\"inner-container\\\">\\r\\n   <div class=\\\"final-receipt-page section-gap\\\">\\r\\n      <div class=\\\"account-info\\\">\\r\\n         <!-- *ngIf=\\\"((UserRole$ | async)=='Admin' || (UserRole$ | async)=='Moderator') && (LoginStatus$ | async) as LoginStatus \\\"> -->\\r\\n         <div class=\\\"container\\\">\\r\\n            <div class=\\\"mb-4 user-info\\\">\\r\\n               <div fxLayoutAlign=\\\"flex-start\\\">\\r\\n                  <div class=\\\"login-user-img\\\">\\r\\n                     <img src=\\\"assets/images/user-4.jpg\\\" width=\\\"70\\\" alt=\\\"Active User\\\">\\r\\n                  </div>\\r\\n                  <!-- login-user-img -->\\r\\n                  <div class=\\\"px-3\\\">\\r\\n                     <!-- <h4>Hi, John Doe</h4> -->\\r\\n                     <h4>{{CurrentUserName}}</h4>\\r\\n                     <div class=\\\"text-muted text-xl\\\">johndoe@deo.com</div>\\r\\n                  </div>\\r\\n               </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row wrap\\\" class=\\\"col-gap\\\">\\r\\n               <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"30\\\" fxFlex.lg=\\\"20\\\" fxFlex.xl=\\\"20\\\"\\r\\n                  class=\\\"user-nav-list bg-white\\\">\\r\\n                  <mat-list class=\\\"py-2\\\" role=\\\"list\\\">\\r\\n                     <mat-list-item role=\\\"listitem\\\">\\r\\n                        <a [routerLink]=\\\"['/admin-panel/account/profile']\\\" routerLinkActive=\\\"tab-active\\\">\\r\\n                           <span>\\r\\n                              <i class=\\\"material-icons\\\">account_circle</i> Profile\\r\\n                           </span>\\r\\n                        </a>\\r\\n                     </mat-list-item>\\r\\n                     <mat-list-item role=\\\"listitem\\\">\\r\\n                        <a [routerLink]=\\\"['/admin-panel/account/collaboration']\\\" routerLinkActive=\\\"tab-active\\\">\\r\\n                           <i class=\\\"material-icons\\\">location_on</i>\\r\\n                           <span>Collaboration</span>\\r\\n                        </a>\\r\\n                     </mat-list-item>\\r\\n                  </mat-list>\\r\\n               </div>\\r\\n               <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"70\\\" fxFlex.lg=\\\"70\\\" fxFlex.xl=\\\"70\\\"\\r\\n                  class=\\\"user-content-wrapper my-0\\\">\\r\\n                  <div class=\\\"tab-container\\\">\\r\\n                     <router-outlet></router-outlet>\\r\\n                  </div>\\r\\n                  <!-- tab-container -->\\r\\n               </div>\\r\\n            </div>\\r\\n         </div>\\r\\n      </div>\\r\\n      <!-- account-info -->\\r\\n   </div>\\r\\n   <!-- final-receipt-page -->\\r\\n</div>\\r\\n<!-- inner-container -->\"","module.exports = \"<mat-card>\\r\\n   <button color=\\\"primary\\\" mat-raised-button (click)=\\\"addNewUserDialog()\\\">\\r\\n      Add Users\\r\\n   </button>\\r\\n   <ng-container *ngIf=\\\"collaborationData && collaborationData.length>0; else elseBlock\\\">\\r\\n      <div class=\\\"table-responsive-x\\\">\\r\\n         <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8 w-100 table-scroll-wrap\\\">\\r\\n            <ng-container matColumnDef=\\\"image\\\">\\r\\n               <th class=\\\"px-3\\\" mat-header-cell *matHeaderCellDef>Image</th>\\r\\n               <td class=\\\"px-3\\\" mat-cell *matCellDef=\\\"let element\\\"> <img src= {{element.image}} width=\\\"40\\\" height=\\\"40\\\"></td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"name\\\">\\r\\n               <th class=\\\"px-3\\\" mat-header-cell *matHeaderCellDef> Name </th>\\r\\n               <td class=\\\"px-3\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n               <th class=\\\"px-3\\\" mat-header-cell *matHeaderCellDef> email </th>\\r\\n               <td class=\\\"px-3\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"access\\\">\\r\\n               <th class=\\\"px-3\\\" mat-header-cell *matHeaderCellDef> Access </th>\\r\\n               <td class=\\\"px-3\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.access}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"action\\\">\\r\\n               <th class=\\\"px-3\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n               <td class=\\\"px-3\\\" mat-cell *matCellDef=\\\"let element;let i = index;\\\">\\r\\n                  <button color=\\\"warn\\\" mat-icon-button (click)=\\\"onDelete(i)\\\">\\r\\n                     <mat-icon class=\\\"\\\">delete</mat-icon>\\r\\n                  </button>\\r\\n               </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n         </table>\\r\\n      </div>  \\r\\n      <!-- table-responsive-x -->\\r\\n   </ng-container>\\r\\n   <ng-template #elseBlock>\\r\\n      <h5 class=\\\"ml-5\\\">No user found</h5>\\r\\n   </ng-template>\\r\\n</mat-card>\"","module.exports = \"<mat-card *ngIf=\\\"type == 'info'\\\">\\r\\n   <h4> Edit Profile Information</h4>\\r\\n   <div fxLayoutAlign=\\\"flex-start\\\">\\r\\n      <div class=\\\"product-image-gallery-item edit-icon mb-4\\\">\\r\\n         <a>\\r\\n            <img src=\\\"assets/images/user-edit.png\\\" alt=\\\"\\\" width=\\\"70\\\" alt=\\\"Active User\\\">\\r\\n         </a>\\r\\n         <button class=\\\"edit-btn\\\" md-mini-fab type=\\\"button\\\">\\r\\n            <label for=\\\"fileToUpload\\\">\\r\\n               <mat-icon>edit</mat-icon>\\r\\n            </label>\\r\\n         </button>\\r\\n         <input mat id=\\\"fileToUpload\\\" type=\\\"file\\\" accept=\\\"image/*\\\" style=\\\"display:none;\\\">\\r\\n      </div>\\r\\n      <!-- product-image-gallery-item -->\\r\\n   </div>\\r\\n   <div fxLayout=\\\"row wrap\\\" class=\\\"col-gap\\\">\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\">\\r\\n         <form [formGroup]=\\\"info\\\">\\r\\n            <div class=\\\"example-container\\\">\\r\\n               <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                  <input matInput placeholder=\\\"First Name\\\" formControlName=\\\"first_name\\\">\\r\\n                  <mat-error *ngIf=\\\"info.get('first_name').hasError('required') && info.get('first_name').touched\\\">This\\r\\n                     field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                  <input matInput placeholder=\\\"Last Name\\\" formControlName=\\\"last_name\\\">\\r\\n                  <mat-error *ngIf=\\\"info.get('last_name').hasError('required') && info.get('last_name').touched\\\">This\\r\\n                     field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <div class=\\\"mb-3\\\">\\r\\n                  <mat-radio-group formControlName=\\\"gender\\\">\\r\\n                     <mat-radio-button class=\\\"mr-2\\\" value=\\\"male\\\">Male</mat-radio-button>\\r\\n                     <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n               </div>\\r\\n               <div>\\r\\n                  <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                     <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Bith Date\\\" formControlName=\\\"date\\\">\\r\\n                     <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                     <mat-datepicker #picker></mat-datepicker>\\r\\n                     <mat-error *ngIf=\\\"info.get('date').hasError('required') && info.get('date').touched\\\">This field\\r\\n                        should not be empty.</mat-error>\\r\\n                  </mat-form-field>\\r\\n               </div>\\r\\n               <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                  <input matInput placeholder=\\\"Mobile No.\\\" formControlName=\\\"phone_number\\\">\\r\\n                  <mat-error *ngIf=\\\"info.get('phone_number').hasError('required') && info.get('phone_number').touched\\\">\\r\\n                     This field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                  <input matInput placeholder=\\\"Location\\\" formControlName=\\\"location\\\">\\r\\n                  <mat-error *ngIf=\\\"info.get('location').hasError('required') && info.get('location').touched\\\">This\\r\\n                     field should not be empty.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <mat-form-field class=\\\"w-100 mb-3\\\">\\r\\n                  <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n                  <mat-error *ngIf=\\\"info.get('email').hasError('required') && info.get('email').touched\\\">This field\\r\\n                     should not be empty.</mat-error>\\r\\n                  <mat-error *ngIf=\\\"info.get('email').hasError('pattern') && info.get('email').touched\\\">Please enter a\\r\\n                     valid email.</mat-error>\\r\\n               </mat-form-field>\\r\\n               <button mat-raised-button color=\\\"accent\\\" (click)=\\\"submitProfileInfo()\\\">Save</button>\\r\\n            </div>\\r\\n            <!-- example-container -->\\r\\n         </form>\\r\\n      </div>\\r\\n      <div fxFlex.xs=\\\"100\\\" fxFlex.sm=\\\"100\\\" fxFlex.md=\\\"50\\\" fxFlex.lg=\\\"50\\\" fxFlex.xl=\\\"50\\\" class=\\\"edit-profile\\\"\\r\\n         style=\\\"background-image: url(assets/images/user-edit.png)\\\">\\r\\n      </div>\\r\\n   </div>\\r\\n</mat-card>\"","module.exports = \"<mat-card>\\r\\n   <h4>Profile Information</h4>\\r\\n   <div class=\\\"pt-3\\\">\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>First Name:</label>\\r\\n         <span>John</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>Last Name:</label>\\r\\n         <span>Doe</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>Gender:</label>\\r\\n         <span>Male</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>Date of birth:</label>\\r\\n         <span>Jan,06,1979</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>Mobile Number:</label>\\r\\n         <span>+120 256 254 125</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>location:</label>\\r\\n         <span>New York</span>\\r\\n      </div>\\r\\n      <div class=\\\"proflie-field mb-3\\\">\\r\\n         <label>E-mail id:</label>\\r\\n         <span class=\\\"text-ellipse\\\">johnDoe@doe.com</span>\\r\\n      </div>\\r\\n      <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['edit']\\\" [queryParams]=\\\"{type:'info'}\\\">Edit</button>\\r\\n   </div>\\r\\n</mat-card>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluUGFuZWwvQWRtaW5BY2NvdW50L0FjY291bnQvQWNjb3VudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AdminPanelServiceService } from '../../Service/AdminPanelService.service';\r\nimport { User } from '../../Interfaces/User';\r\n\r\n@Component({\r\n  selector: 'app-Account',\r\n  templateUrl: './Account.component.html',\r\n  styleUrls: ['./Account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor(private adminService: AdminPanelServiceService) { }\r\n\r\n  LoginStatus$: Observable<boolean>;\r\n\r\n  UserName$: Observable<string>;\r\n\r\n  CurrentUserName: string;\r\n\r\n  UserRole$: Observable<string>;\r\n\r\n  CurrentUser$: Observable<User>;\r\n\r\n  ngOnInit() {\r\n    this.LoginStatus$ = this.adminService.isLoggedIn;\r\n    this.UserName$ = this.adminService.currentUserName;\r\n    this.UserRole$ = this.adminService.currentUserRole;\r\n\r\n    this.adminService.currentUserName.subscribe(result => { this.CurrentUserName = result });\r\n\r\n    this.CurrentUser$ = this.adminService.getUserByUsername(this.CurrentUserName);\r\n  }\r\n\r\n  // onLogout() {\r\n  //   this.adminService.logout();\r\n  // }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport {\r\n\tMatListModule,\r\n\tMatIconModule,\r\n\tMatButtonModule,\r\n\tMatCardModule,\r\n\tMatInputModule,\r\n\tMatDatepickerModule,\r\n\tMatRadioModule,\r\n\tMatFormFieldModule,\r\n\tMatSelectModule,\r\n\tMatTableModule,\r\n\tMatCheckboxModule\r\n} from '@angular/material';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AccountComponent } from './Account/Account.component';\r\nimport { CollaborationComponent } from './Collaboration/Collaboration.component';\r\nimport { EditProfileComponent } from './EditProfile/EditProfile.component';\r\nimport { ProfileComponent } from './Profile/Profile.component';\r\nimport { AdminAccountRoutes } from './AdminAccount.routing';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tProfileComponent,\r\n\t\tAccountComponent,\r\n\t\tCollaborationComponent,\r\n\t\tEditProfileComponent\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule.forChild(AdminAccountRoutes),\r\n\t\tMatListModule,\r\n\t\tMatButtonModule,\r\n\t\tMatIconModule,\r\n\t\tMatCardModule,\r\n\t\tMatInputModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSelectModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatTableModule,\r\n\t\tFlexLayoutModule,\r\n\t\tMatCheckboxModule\r\n\t]\r\n})\r\nexport class AdminAccountModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { ProfileComponent } from './Profile/Profile.component';\r\nimport { AccountComponent } from './Account/Account.component';\r\nimport { CollaborationComponent } from './Collaboration/Collaboration.component';\r\nimport { EditProfileComponent } from './EditProfile/EditProfile.component';\r\n\r\nexport const AdminAccountRoutes: Routes = [\r\n   {\r\n      path: '',\r\n      component: AccountComponent,\r\n      children: [\r\n         {\r\n            path: 'profile',\r\n            component: ProfileComponent\r\n         },\r\n         {\r\n            path: 'collaboration',\r\n            component: CollaborationComponent\r\n         },\r\n         {\r\n            path: 'profile/edit',\r\n            component: EditProfileComponent\r\n         },\r\n      ]\r\n   }\r\n];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluUGFuZWwvQWRtaW5BY2NvdW50L0NvbGxhYm9yYXRpb24vQ29sbGFib3JhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminPanelServiceService } from '../../Service/AdminPanelService.service';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n\tselector: 'app-collaboration',\r\n\ttemplateUrl: './Collaboration.component.html',\r\n\tstyleUrls: ['./Collaboration.component.scss']\r\n})\r\n\r\nexport class CollaborationComponent implements OnInit {\r\n\t\r\n\tpopUpDeleteUserResponse : any;\r\n\tpopUpNewUserResponse    : any; \r\n\tcollaborationData\t\t: any [];\r\n\r\n\tdisplayedColumns : string[] = ['image', 'name', 'email', 'access', 'action'];\r\n\r\n\tdataSource = new MatTableDataSource<any>(this.collaborationData);\r\n\r\n\tconstructor(public service : AdminPanelServiceService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.service.getCollaborationContent().valueChanges().subscribe(res => this.getCollaborationData(res));\t\r\n\t}\r\n\r\n   //getCollaborationData method is used to get the collaboration data.\r\n   getCollaborationData(response){\r\n      this.collaborationData = response;\r\n      this.dataSource = new MatTableDataSource<any>(this.collaborationData);\r\n   }\r\n\t/** \r\n     *onDelete method is used to open a delete dialog.\r\n     */\r\n   onDelete(i){\r\n      this.service.deleteDialog(\"Are you sure you want to delete this user permanently?\").\r\n         subscribe( res => {this.popUpDeleteUserResponse = res},\r\n                    err => console.log(err),\r\n                    ()  => this.getDeleteResponse(this.popUpDeleteUserResponse,i))\r\n   }\r\n\r\n   /**\r\n     * getDeleteResponse method is used to delete a user from the user list.\r\n     */\r\n   getDeleteResponse(response : string,i){\r\n      if(response == \"yes\"){\r\n         this.dataSource.data.splice(i,1);\r\n         this.dataSource = new MatTableDataSource(this.dataSource.data);\r\n      }\r\n   }\r\n\r\n   /** \r\n     * addNewUserDialog method is used to open a add new client dialog.\r\n     */   \r\n   addNewUserDialog() {\r\n      this.service.addNewUserDialog().\r\n         subscribe( res => {this.popUpNewUserResponse = res},\r\n                    err => console.log(err),\r\n                    ()  => this.getAddUserPopupResponse(this.popUpNewUserResponse))\r\n   }\r\n\r\n   /**\r\n     *getAddUserPopupResponse method is used to get a new client dialog response.\r\n     *if response will be get then add new client into client list.\r\n     */\r\n   getAddUserPopupResponse(response: any){\r\n      if(response){\r\n         let addUser = {\r\n            image : \"assets/images/user-edit.png\",\r\n            name : response.name,\r\n            email : response.email,\r\n\t        access : response.accessType\r\n         }\r\n         this.collaborationData.push(addUser);\r\n         this.dataSource = new MatTableDataSource<any>(this.collaborationData);     \r\n      }\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluUGFuZWwvQWRtaW5BY2NvdW50L0VkaXRQcm9maWxlL0VkaXRQcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params }   from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder,FormArray, Validators } from '@angular/forms';\r\nimport { ToastaService, ToastaConfig, ToastOptions, ToastData} from 'ngx-toasta';\r\n\r\n@Component({\r\n  selector: 'app-EditProfile',\r\n  templateUrl: './EditProfile.component.html',\r\n  styleUrls: ['./EditProfile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n   type         : string;\r\n   info         : FormGroup;\r\n   address      : FormGroup;\r\n   card         : FormGroup;\r\n   emailPattern : any = /\\S+@\\S+\\.\\S+/;\r\n   toastOption  : ToastOptions = {\r\n      title     : \"Account Information\",\r\n      msg       : \"Your account information updated successfully!\",\r\n      showClose : true,\r\n      timeout   : 3000,\r\n      theme     : \"material\"\r\n   };\r\n\r\n   constructor(private route: ActivatedRoute,\r\n               private router: Router,\r\n               private formGroup : FormBuilder,\r\n               private toastyService: ToastaService) {\r\n\r\n      this.route.params.subscribe(params => {\r\n         this.route.queryParams.forEach(queryParams => {\r\n            this.type = queryParams['type'];\r\n         });   \r\n      });\r\n   }\r\n\r\n   ngOnInit() {\r\n      this.info = this.formGroup.group({\r\n         first_name   : ['', [Validators.required]],\r\n         last_name    : ['', [Validators.required]],\r\n         gender       : ['male'],\r\n         date         : [],\r\n         phone_number : ['', [Validators.required]],\r\n         location     : [''],\r\n         email        : ['', [Validators.required, Validators.pattern(this.emailPattern)]]\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Function is used to submit the profile info.\r\n    * If form value is valid, redirect to profile page.\r\n    */\r\n   submitProfileInfo() {\r\n      if(this.info.valid){\r\n         this.router.navigate(['/admin-panel/account/profile']).then(()=>{\r\n           this.toastyService.success(this.toastOption);\r\n         });\r\n      } else {\r\n         for (let i in this.info.controls) {\r\n            this.info.controls[i].markAsTouched();\r\n         }\r\n      }\r\n   }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL0FkbWluUGFuZWwvQWRtaW5BY2NvdW50L1Byb2ZpbGUvUHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './Profile.component.html',\r\n  styleUrls: ['./Profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}